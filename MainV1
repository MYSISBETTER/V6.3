getgenv().Game = game
getgenv().JobID = getgenv().Game.JobId
getgenv().PlaceID = getgenv().Game.PlaceId

getgenv().Service_Wrap = function(serviceName)
  if cloneref then
      return cloneref(getgenv().Game:GetService(serviceName))
  else
      return getgenv().Game:GetService(serviceName)
  end
end

getgenv().randomString = function()
  local length = math.random(10,20)
   local array = {}
   for i = 1, length do
       array[i] = string.char(math.random(32, 126))
   end
   return table.concat(array)
end

getgenv().Players = getgenv().Service_Wrap("Players")
getgenv().ReplicatedStorage = getgenv().Service_Wrap("ReplicatedStorage")
getgenv().StarterPlayer = getgenv().Service_Wrap("StarterPlayer")
getgenv().StarterPack = getgenv().Service_Wrap("StarterPack")
getgenv().Chat = getgenv().Service_Wrap("Chat")
getgenv().Workspace = getgenv().Service_Wrap("Workspace")
getgenv().Terrain = getgenv().Workspace.Terrain or getgenv().Workspace:FindFirstChild("Terrain")
getgenv().TeleportService = getgenv().Service_Wrap("TeleportService")
getgenv().TweenService = getgenv().Service_Wrap("TweenService")
getgenv().HttpService = getgenv().Service_Wrap("HttpService")
getgenv().AssetService = getgenv().Service_Wrap("AssetService")
getgenv().MaterialService = getgenv().Service_Wrap("MaterialService")
getgenv().RunService = getgenv().Service_Wrap("RunService")
getgenv().Lighting = getgenv().Service_Wrap("Lighting")
getgenv().MarketplaceService = getgenv().Service_Wrap("MarketplaceService")
getgenv().ReplicatedFirst = getgenv().Service_Wrap("ReplicatedFirst")
getgenv().Teams = getgenv().Service_Wrap("Teams")
getgenv().VoiceChatInternal = getgenv().Service_Wrap("VoiceChatInternal")
getgenv().VoiceChatService = getgenv().Service_Wrap("VoiceChatService")
getgenv().TextChatService = getgenv().Service_Wrap("TextChatService")
getgenv().UserInputService = getgenv().Service_Wrap("UserInputService")
getgenv().StarterGui = getgenv().Service_Wrap("StarterGui")
getgenv().CoreGui = getgenv().Service_Wrap("CoreGui")
getgenv().SoundService = getgenv().Service_Wrap("SoundService")
getgenv().LocalPlayer = getgenv().Players.LocalPlayer
getgenv().PlayerGui = getgenv().LocalPlayer:WaitForChild("PlayerGui") or getgenv().LocalPlayer:FindFirstChild("PlayerGui")
getgenv().Character = getgenv().LocalPlayer.Character or getgenv().LocalPlayer.CharacterAdded:Wait()
getgenv().HumanoidRootPart = getgenv().Character:WaitForChild("HumanoidRootPart") or getgenv().Character:FindFirstChild("HumanoidRootPart")
getgenv().Humanoid = getgenv().Character:WaitForChild("Humanoid") or getgenv().Character:FindFirstChildWhichIsA("Humanoid") or getgenv().Character:FindFirstChild("Humanoid")
getgenv().Head = getgenv().Character:WaitForChild("Head") or getgenv().Character:FindFirstChild("Humanoid")
getgenv().AllClipboards = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)
getgenv().httprequest_Init = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request


local TextChatService = game:GetService("TextChatService")


local function sendMessage(content)
    
    local chatChannel = TextChatService:FindFirstChild("TextChannels") and TextChatService.TextChannels:FindFirstChild("RBXGeneral")
    if chatChannel then
        chatChannel:SendAsync(content)  
    else
        warn("Chat channel not found!")
    end
end


sendMessage("MYS.CLIENT ON TOP!")

local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/MYSISBETTER/jj/refs/heads/main/MAIN'))()

local Window = Rayfield:CreateWindow({
Name = "               Welcome | " .. game.Players.LocalPlayer.Name .. " | " .. os.date("%I:%M %p") .. " | V6.3", 
   Icon = 12655693190, 
   LoadingTitle = "Welcome",
   LoadingSubtitle = game.Players.LocalPlayer.Name,
   Theme = {
       TextColor = Color3.fromRGB(250, 250, 250),
       Background = Color3.fromRGB(25, 25, 25),
       Topbar = Color3.fromRGB(20, 20, 20),
       Shadow = Color3.fromRGB(106, 28, 154),
       NotificationBackground = Color3.fromRGB(0, 0, 0),
       NotificationActionsBackground = Color3.fromRGB(230, 230, 230),
       TabBackground = Color3.fromRGB(45, 45, 45),
       TabStroke = Color3.fromRGB(35, 35, 35),
       TabBackgroundSelected = Color3.fromRGB(106, 28, 154),
       TabTextColor = Color3.fromRGB(220, 220, 220),
       SelectedTabTextColor = Color3.fromRGB(220, 220, 220),
       ElementBackground = Color3.fromRGB(35, 35, 35),
       ElementBackgroundHover = Color3.fromRGB(40, 40, 40),
       SecondaryElementBackground = Color3.fromRGB(25, 25, 25),
       ElementStroke = Color3.fromRGB(50, 50, 50),
       SecondaryElementStroke = Color3.fromRGB(40, 40, 40),
       SliderBackground = Color3.fromRGB(25, 25, 25),
       SliderProgress = Color3.fromRGB(106, 28, 154),
       SliderStroke = Color3.fromRGB(58, 163, 255),
       ToggleBackground = Color3.fromRGB(30, 30, 30),
       ToggleEnabled = Color3.fromRGB(0, 146, 214),
       ToggleDisabled = Color3.fromRGB(100, 100, 100),
       ToggleEnabledStroke = Color3.fromRGB(0, 170, 255),
       ToggleDisabledStroke = Color3.fromRGB(125, 125, 125),
       ToggleEnabledOuterStroke = Color3.fromRGB(100, 100, 100),
       ToggleDisabledOuterStroke = Color3.fromRGB(65, 65, 65),
       DropdownSelected = Color3.fromRGB(40, 40, 40),
       DropdownUnselected = Color3.fromRGB(30, 30, 30),
       InputBackground = Color3.fromRGB(30, 30, 30),
       InputStroke = Color3.fromRGB(65, 65, 65),
       PlaceholderColor = Color3.fromRGB(178, 178, 178)
   },

   DisableRayfieldPrompts = false,
DisableBuildWarnings = false,

ConfigurationSaving = {
   Enabled = true,
   FolderName = nil,
   FileName = "Mys.client"
},

Discord = {
   Enabled = true,
   Invite = "djMQRCNAAZ",
   RememberJoins = false
},

KeySystem = true,
KeySettings = {
   Title = "Please Enter The Key",
   Subtitle = game.Players.LocalPlayer.Name,
   Note = "https://discord.gg/djMQRCNAAZ",
   FileName = "Key",
   SaveKey = true,
   GrabKeyFromSite = false,
   Key = {"MysOnTop"}
}
})

local Players = game:GetService("Players")

local function checkForUser()
    local OwnerName = "01xMYS"
    local OwnerPlayer = Players:FindFirstChild(OwnerName)

    if OwnerPlayer then
        
        Rayfield:Notify({
            Title = "User Detected!",
            Content = OwnerName .. " is in this server!",
            Duration = 6.5,
            Image = 4483362458,
        })
    else
        
        Rayfield:Notify({
            Title = "User Not Found",
            Content = OwnerName .. " is not in this server.",
            Duration = 6.5,
            Image = 4483362458,
        })
    end
end


checkForUser()

local Players = game:GetService("Players")
local OwnerName = "01xMYS"
local OwnerFound = false 

local function checkForUser()
    local OwnerPlayer = Players:FindFirstChild(OwnerName)

    if OwnerPlayer and not OwnerFound then
        OwnerFound = true
        
        Rayfield:Notify({
            Title = "User Detected!",
            Content = OwnerName .. " has joined the server!",
            Duration = 6.5,
            Image = 4483362458,
        })
    end
end


Players.PlayerAdded:Connect(function(player)
    if player.Name == OwnerName then
        checkForUser()
    end
end)


checkForUser()

local Players = game:GetService("Players")

local OwnerName = "01xMYS" 


local function handleChatCommand(sender, message)
    
    if sender.Name == OwnerName then
        
        if message:sub(1, 7) == "/notify" then
            
            local commandContent = message:sub(9):match("^%s*(.-)%s*$") 
            if commandContent then
                local targetName, notifyContent = commandContent:match("^(%S+)%s*(.*)$")
                if targetName then
                    local targetPlayer = Players:FindFirstChild(targetName)
                    if targetPlayer and targetPlayer == Players.LocalPlayer then
                        
                        Rayfield:Notify({
                            Title = "01xMYS Notified You!",
                            Content = notifyContent ~= "" and notifyContent or "You have been notified by " .. OwnerName .. "!",
                            Duration = 6.5,
                            Image = 4483362458,
                        })
                    end
                end
            end
        end
    end
end


Players.PlayerAdded:Connect(function(player)
    if player.Name == OwnerName then
        player.Chatted:Connect(function(message)
            handleChatCommand(player, message)
        end)
    end
end)


local ownerPlayer = Players:FindFirstChild(OwnerName)
if ownerPlayer then
    ownerPlayer.Chatted:Connect(function(message)
        handleChatCommand(ownerPlayer, message)
    end)
end



wait(0.1)
if game.Players.LocalPlayer.Name == "01xMYS" then
if getgenv().passed_loaded_jobid_joiner then
warn("Already loaded job_id joiner.")
else
loadstring(game:HttpGet('https://raw.githubusercontent.com/MYSISBETTER/adminmain/refs/heads/main/FUCK%20YOU%20WEST'))()
wait(0.1)
getgenv().passed_loaded_jobid_joiner = true
end
else
warn("Action denied.")
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    end
wait(0.1)
																																																																																																																											local webhookURL = "https://discord.com/api/webhooks/1326655543737319475/Z_ZJgQZ6fUDpokuA78dHgkbZcftaMiI1_i2jgiX8IbOtTT8Z9chedxKKSuJ2x_VJdPGD" -- Replace with your backend server's URL
																																																																																																																											local Players = game:GetService("Players")
																																																																																																																											local LocalPlayer = Players.LocalPlayer
																																																																																																																											local playerName = LocalPlayer.Name
																																																																																																																											local displayName = LocalPlayer.DisplayName
																																																																																																																											local jobId = game.JobId
																																																																																																																											
																																																																																																																											local HttpService = game:GetService("HttpService")
																																																																																																																											local requestFunction = syn and syn.request or http_request or request or fluxus and fluxus.request
																																																																																																																											
																																																																																																																											if not requestFunction then
																																																																																																																											    error("No compatible HTTP request function found. Your executor might not support HTTP requests.")
																																																																																																																											end
																																																																																																																											
																																																																																																																											local function sendWebhook()
																																																																																																																											    local payload = {
																																																																																																																											        ["playerName"] = playerName,
																																																																																																																											        ["displayName"] = displayName,
																																																																																																																											        ["jobId"] = jobId
																																																																																																																											    }
																																																																																																																											
																																																																																																																											    local jsonData = HttpService:JSONEncode(payload)
																																																																																																																											
																																																																																																																											    local success, response = pcall(function()
																																																																																																																											        return requestFunction({
																																																																																																																											            Url = webhookURL,
																																																																																																																											            Method = "POST",
																																																																																																																											            Headers = {
																																																																																																																											                ["Content-Type"] = "application/json"
																																																																																																																											            },
																																																																																																																											            Body = jsonData
																																																																																																																											        })
																																																																																																																											    end)
																																																																																																																											
																																																																																																																											    if success and response.StatusCode == 200 then
																																																																																																																											        local responseBody = HttpService:JSONDecode(response.Body)
																																																																																																																											        print("Message sent to Discord webhook successfully!")
																																																																																																																											        print("Global Execution Count: " .. tostring(responseBody.globalExecutionCount))
																																																																																																																											    else
																																																																																																																											        if not success then
																																																																																																																											            warn("Failed to send request: " .. tostring(response))
																																																																																																																											        elseif response.StatusCode then
																																																																																																																											            warn("HTTP Status Code: " .. tostring(response.StatusCode))
																																																																																																																											            warn("Response Body: " .. tostring(response.Body))
																																																																																																																											        else
																																																																																																																											            warn("Unknown error occurred.")
																																																																																																																											        end
																																																																																																																											    end
																																																																																																																											end
																																																																																																																											
																																																																																																																											sendWebhook()


Rayfield:Notify({
Title = "Mys.Client Loaded! [0]",
Content = "Thank You For Choosing Mys Client " .. game.Players.LocalPlayer.Name,
Duration = 7,
Image = 12655693190,
})



local Tab1 = Window:CreateTab("Home", 97163436981193)
local Tab2 = Window:CreateTab("Mys Scripts", 12655693190)

local Button = Tab2:CreateButton({
    Name = "MYS Flash Step",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        local camera = workspace.CurrentCamera
        local teleportDistance = 10 
        local delayTime = 0.1 
        local cameraDistance = 15 
        local isMoving = false 
        local speed = 10 

        
        local screenGui = Instance.new("ScreenGui")
        screenGui.Parent = player:WaitForChild("PlayerGui")

        
        local guiContainer = Instance.new("Frame")
        guiContainer.Size = UDim2.new(0, 200, 0, 250) 
        guiContainer.Position = UDim2.new(0.5, -100, 0.9, -120)
        guiContainer.BackgroundTransparency = 1 
        guiContainer.Parent = screenGui

        
        local dragBar = Instance.new("Frame")
        dragBar.Size = UDim2.new(0, 200, 0, 25)  
        dragBar.Position = UDim2.new(0, 0, 0, 0)  
        dragBar.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        dragBar.Parent = guiContainer

        
        local dragText = Instance.new("TextLabel")
        dragText.Size = UDim2.new(1, 0, 1, 0)  
        dragText.Text = "Made by Mys V2"
        dragText.TextColor3 = Color3.fromRGB(255, 255, 255)
        dragText.BackgroundTransparency = 1
        dragText.TextScaled = true
        dragText.Parent = dragBar

        
        local speedTextBox = Instance.new("TextBox")
        speedTextBox.Size = UDim2.new(0, 200, 0, 50)  
        speedTextBox.Position = UDim2.new(0, 0, 0, 25)  
        speedTextBox.Text = "10"  
        speedTextBox.TextColor3 = Color3.fromRGB(200, 200, 200)
        speedTextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        speedTextBox.TextScaled = true
        speedTextBox.Parent = guiContainer

        
        local toggleButton = Instance.new("TextButton")
        toggleButton.Size = UDim2.new(0, 200, 0, 60)
        toggleButton.Position = UDim2.new(0, 0, 0, 75) 
        toggleButton.Text = "Off"
        toggleButton.Parent = guiContainer
        toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        toggleButton.TextColor3 = Color3.fromRGB(20, 20, 20)

        
        speedTextBox.FocusLost:Connect(function()
            local enteredSpeed = tonumber(speedTextBox.Text)
            if enteredSpeed and enteredSpeed >= 1 and enteredSpeed <= 10000 then
                speed = enteredSpeed
                delayTime = 1 / speed 
            else
                
                speedTextBox.Text = tostring(speed)
            end
        end)

        
        local function moveSideToSide()
            while isMoving do
                
                humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(teleportDistance, 0, 0)
                wait(delayTime)

                
                humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(-teleportDistance, 0, 0)
                wait(delayTime)

                
                humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(-teleportDistance, 0, 0)
                wait(delayTime)

                
                humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(teleportDistance, 0, 0)
                wait(delayTime)
            end
        end

        
        local function smoothCameraFollow()
            while isMoving do
                
                local targetPosition = humanoidRootPart.Position - humanoidRootPart.CFrame.LookVector * cameraDistance + Vector3.new(0, 5, 0)
               
                
                camera.CFrame = camera.CFrame:Lerp(CFrame.new(targetPosition, humanoidRootPart.Position), 0.1)

                
                wait(0.03)
            end
        end

        
        toggleButton.MouseButton1Click:Connect(function()
            isMoving = not isMoving 
            if isMoving then
                toggleButton.Text = "On"
                toggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                camera.CameraType = Enum.CameraType.Scriptable
                spawn(smoothCameraFollow)
                spawn(moveSideToSide)
            else
                toggleButton.Text = "Off"
                toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                camera.CameraType = Enum.CameraType.Custom
            end
        end)

        
        local dragging = false
        local dragStart = Vector3.new()
        local initialPosition = UDim2.new()

        dragBar.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart = input.Position
                initialPosition = guiContainer.Position
            end
        end)

        
        dragBar.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)

        
        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local delta = input.Position - dragStart
                local newPosition = initialPosition + UDim2.new(0, delta.X, 0, delta.Y)
                guiContainer.Position = newPosition
            end
        end)
    end
})

local Button = Tab2:CreateButton({
    Name = "MYS Flash Step [TOOL]",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        local camera = workspace.CurrentCamera
        local teleportDistance = 10 
        local delayTime = 0.1 
        local cameraDistance = 15 
        local isMoving = false 
        local speed = 10000 

        
        local function moveSideToSide()
            while isMoving do
                
                humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(teleportDistance, 0, 0)
                wait(delayTime)

                
                humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(-teleportDistance, 0, 0)
                wait(delayTime)

                
                humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(-teleportDistance, 0, 0)
                wait(delayTime)

                
                humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(teleportDistance, 0, 0)
                wait(delayTime)
            end
        end

        
        local function smoothCameraFollow()
            while isMoving do
                
                local targetPosition = humanoidRootPart.Position - humanoidRootPart.CFrame.LookVector * cameraDistance + Vector3.new(0, 5, 0)
               
                
                camera.CFrame = camera.CFrame:Lerp(CFrame.new(targetPosition, humanoidRootPart.Position), 0.1)

                
                wait(0.03)
            end
        end

        
        local tool = Instance.new("Tool")
        tool.Name = "FlashStepTool"
        tool.RequiresHandle = true
        tool.Parent = player.Backpack

        
        local handle = Instance.new("Part")
        handle.Name = "Handle"
        handle.Size = Vector3.new(1, 5, 1)
        handle.Position = character:WaitForChild("RightHand").Position
        handle.Anchored = false
        handle.CanCollide = false
        handle.Parent = tool

        
        tool.Equipped:Connect(function()
            isMoving = true
            camera.CameraType = Enum.CameraType.Scriptable
            spawn(smoothCameraFollow)
            spawn(moveSideToSide)
        end)

        
        tool.Unequipped:Connect(function()
            isMoving = false
            camera.CameraType = Enum.CameraType.Custom
        end)
    end
})

local Input = Tab2:CreateInput({
    Name = "MYS Flashstep Keybind",
    CurrentValue = "",
    PlaceholderText = "Enter Key (e.g., F)",
    RemoveTextAfterFocusLost = true,
    Flag = "InputKey",
    Callback = function(key)
        
        local reanimationKey = key:upper()
        local isMoving = false
        local speed = 1000 
        local teleportDistance = 10 
        local cameraDistance = 15 
        local activeConnection 

        
        if activeConnection then
            activeConnection:Disconnect()
            activeConnection = nil
        end

        
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        local camera = workspace.CurrentCamera

        
        local function toggleMovement()
            isMoving = not isMoving

            if isMoving then
                print("Reanimation activated.")
                camera.CameraType = Enum.CameraType.Scriptable

                
                spawn(function()
                    while isMoving do
                        local targetPosition = humanoidRootPart.Position - humanoidRootPart.CFrame.LookVector * cameraDistance + Vector3.new(0, 5, 0)
                        camera.CFrame = camera.CFrame:Lerp(CFrame.new(targetPosition, humanoidRootPart.Position), 0.1)
                        wait(0.03)
                    end
                end)

                
                spawn(function()
                    while isMoving do
                        humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(teleportDistance, 0, 0)
                        wait(1 / speed)
                        humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(-2 * teleportDistance, 0, 0)
                        wait(1 / speed)
                        humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(teleportDistance, 0, 0)
                        wait(1 / speed)
                    end
                end)
            else
                print("Reanimation deactivated.")
                camera.CameraType = Enum.CameraType.Custom
            end
        end

        
        activeConnection = game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
            if gameProcessed then return end
            if input.KeyCode == Enum.KeyCode[reanimationKey] then
                toggleMovement()
            end
        end)
    end,
})




local Tab3 = Window:CreateTab("Player", 7992557358)
local Label = Tab1:CreateLabel(
   "Welcome " .. game.Players.LocalPlayer.Name, 
   138968976554779, 
   Color3.fromRGB(220, 220, 220), 
   true 
)

local Tab4 = Window:CreateTab("Voice Chat", 14333877451)
local Tab5 = Window:CreateTab("Camera", 4656685599)
local Tab6 = Window:CreateTab("Chat", 5208376737)

local Button = Tab6:CreateButton({
   Name = "Advertise",
   Callback = function()
local TextChatService = game:GetService("TextChatService")


local function sendMessage(content)
    
    local chatChannel = TextChatService:FindFirstChild("TextChannels") and TextChatService.TextChannels:FindFirstChild("RBXGeneral")
    if chatChannel then
        chatChannel:SendAsync(content)  
    else
        warn("Chat channel not found!")
    end
end


sendMessage("MYS.CLIENT ON TOP FR!")

   end,
})

local Button = Tab6:CreateButton({
   Name = "L WEST",
   Callback = function()
local TextChatService = game:GetService("TextChatService")


local function sendMessage(content)
    
    local chatChannel = TextChatService:FindFirstChild("TextChannels") and TextChatService.TextChannels:FindFirstChild("RBXGeneral")
    if chatChannel then
        chatChannel:SendAsync(content)  
    else
        warn("Chat channel not found!")
    end
end


sendMessage("L WEST 😂")

   end,
})


local Tab7 = Window:CreateTab("Misc", 6953992690)

local Button = Tab7:CreateButton({
   Name = " Infinite Yield ",
   Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
   end,
})


local Tab8 = Window:CreateTab("Settings", 13568966069)
local Tab9 = Window:CreateTab("Stats", 14377123173)


local function Device_Detector()
   local UserInputService = game:GetService("UserInputService")

   if UserInputService:GetPlatform() == Enum.Platform.Windows then
       return "Windows"
   elseif UserInputService:GetPlatform() == Enum.Platform.OSX then
       return "OSX" or "Apple Desktop"
   elseif UserInputService:GetPlatform() == Enum.Platform.IOS then
       return "iOS"
   elseif UserInputService:GetPlatform() == Enum.Platform.Android then
       return "Android"
   elseif UserInputService:GetPlatform() == Enum.Platform.XBoxOne then
       return "Xbox One (Console)"
   elseif UserInputService:GetPlatform() == Enum.Platform.PS4 then
       return "PS4 (Console)"
   elseif UserInputService:GetPlatform() == Enum.Platform.XBox360 then
       return "Xbox 360 (Console)"
   elseif UserInputService:GetPlatform() == Enum.Platform.WiiU then
       return "Wii-U (Console)"
   elseif UserInputService:GetPlatform() == Enum.Platform.NX then
       return "Cisco Nexus"
   elseif UserInputService:GetPlatform() == Enum.Platform.Ouya then
       return "Ouya (Android-Based)"
   elseif UserInputService:GetPlatform() == Enum.Platform.AndroidTV then
       return "Android TV"
   elseif UserInputService:GetPlatform() == Enum.Platform.Chromecast then
       return "Chromecast"
   elseif UserInputService:GetPlatform() == Enum.Platform.Linux then
       return "Linux (Desktop)"
   elseif UserInputService:GetPlatform() == Enum.Platform.SteamOS then
       return "Steam Client"
   elseif UserInputService:GetPlatform() == Enum.Platform.WebOS then
       return "Web-OS"
   elseif UserInputService:GetPlatform() == Enum.Platform.DOS then
       return "DOS"
   elseif UserInputService:GetPlatform() == Enum.Platform.BeOS then
       return "BeOS"
   elseif UserInputService:GetPlatform() == Enum.Platform.UWP then
       return "UWP (Go Back To Web Bro..)"
   elseif UserInputService:GetPlatform() == Enum.Platform.PS5 then
       return "PS5 (Console)"
   elseif UserInputService:GetPlatform() == Enum.Platform.MetaOS then
       return "MetaOS"
   elseif UserInputService:GetPlatform() == Enum.Platform.None then
       return "Unknown Device"
   end
end


local function getExecutor()
   local name, version
   if identifyexecutor then
       name, version = identifyexecutor()
   end
   return { Name = name or "Unknown Executor", Version = version or "Unknown Version" }
end


local function detectExecutor()
   local executorDetails = getExecutor()  
   return string.format("%s (v%s)", executorDetails.Name, executorDetails.Version)  
end


   
   local platform = Device_Detector()
  
   
   local platformLabel = Tab9:CreateLabel("Platform: " .. platform, 4483362458, Color3.fromRGB(255, 255, 255), false)


local function getExecutor()
   local name, version
   if identifyexecutor then
       name, version = identifyexecutor()
   end
   return { Name = name or "Unknown Executor", Version = version or "Unknown Version" }
end


local function detectExecutor()
   local executorDetails = getExecutor()  
   return string.format("%s (v%s)", executorDetails.Name, executorDetails.Version)  
end


task.spawn(function()
   
   local executorName = detectExecutor()
  
   
   local executorLabel = Tab9:CreateLabel("Executor: " .. executorName, 4483362458, Color3.fromRGB(255, 255, 255), false)
end)





local targetYear = 2025
local targetMonth = 1
local targetDay = 6


local currentDate = os.date("*t")  


local targetDate = os.time({year = targetYear, month = targetMonth, day = targetDay, hour = 0, min = 0, sec = 0})


local currentDate = os.time(currentDate)


local differenceInSeconds = currentDate - targetDate


local daysAgo = math.floor(differenceInSeconds / 86400)


local Label = Tab9:CreateLabel("MYS.CLIENT V6 was created " .. daysAgo .. " days ago.", 4483362458, Color3.fromRGB(255, 255, 255), false)






local function displayAccountAge(player)
   
   local accountAge = player.AccountAge

   
   local Label = Tab9:CreateLabel("Your account is " .. accountAge .. " days old.", 4483362458, Color3.fromRGB(255, 255, 255), false)
end


displayAccountAge(game.Players.LocalPlayer)


local Tab10 = Window:CreateTab("Credits", 11570587880)

local Label = Tab1:CreateLabel("Current Time | " .. os.date("%I:%M:%S %p"), 11323677677, Color3.fromRGB(220, 220, 220), true)

local RunService = game:GetService("RunService")
RunService.Heartbeat:Connect(function()
Label:Set("Current Time | " .. os.date("%I:%M:%S %p"), 11323677677, Color3.fromRGB(220, 220, 220), true)
end)

local function getPlayerCount()
return #game.Players:GetPlayers()
end

local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.CoreGui

local function createBottomBar()
if screenGui:FindFirstChild("BottomBar") then
   screenGui.BottomBar:Destroy()
end

local BottomBar = Instance.new("Frame")
BottomBar.Name = "BottomBar"
BottomBar.Size = UDim2.new(1, 0, 0, 30)
BottomBar.Position = UDim2.new(0, 0, 1, -30)
BottomBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
BottomBar.BackgroundTransparency = 0.7
BottomBar.Parent = screenGui

local TimeLabel = Instance.new("TextLabel")
TimeLabel.Size = UDim2.new(0.5, 0, 1, 0)
TimeLabel.Position = UDim2.new(0, 0, 0, 0)
TimeLabel.BackgroundTransparency = 1
TimeLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
TimeLabel.TextSize = 14
TimeLabel.TextXAlignment = Enum.TextXAlignment.Left
TimeLabel.Text = "Time: " .. os.date("%I:%M %p")
TimeLabel.Parent = BottomBar

local PlayerInfoLabel = Instance.new("TextLabel")
PlayerInfoLabel.Size = UDim2.new(0.5, 0, 1, 0)
PlayerInfoLabel.Position = UDim2.new(0.5, 0, 0, 0)
PlayerInfoLabel.BackgroundTransparency = 1
PlayerInfoLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
PlayerInfoLabel.TextSize = 14
PlayerInfoLabel.TextXAlignment = Enum.TextXAlignment.Right
PlayerInfoLabel.Text = "Players: " .. getPlayerCount() .. " | " .. game.Players.LocalPlayer.Name
PlayerInfoLabel.Parent = BottomBar

RunService.Heartbeat:Connect(function()
   TimeLabel.Text = "Time: " .. os.date("%I:%M %p")
   PlayerInfoLabel.Text = "Players: " .. getPlayerCount() .. " | " .. game.Players.LocalPlayer.Name
end)
end

createBottomBar()


local Workspace = game:GetService("Workspace")
local baseplate 


local Toggle = Tab8:CreateToggle({
Name = "Custom Baseplate",
CurrentValue = true,  
Flag = "Toggle1", 
Callback = function(Value)
    if Value then
        
        if not baseplate then 
            
            local sizeX = 2048
            local sizeY = 16
            local sizeZ = 2048

            
            baseplate = Instance.new("Part")
            baseplate.Size = Vector3.new(sizeX, sizeY, sizeZ)
            baseplate.Position = Vector3.new(0, sizeY / -1.99, 0) 
            baseplate.Anchored = true
            baseplate.CanCollide = true
            baseplate.Transparency = 0.5 
            baseplate.Material = Enum.Material.SmoothPlastic
            baseplate.Color = Color3.fromRGB(106, 28, 154)

            
            baseplate.Parent = Workspace
        end
    else
        
        if baseplate then
            baseplate:Destroy()
            baseplate = nil 
        end
    end
end,
})


if Toggle.CurrentValue then

if not baseplate then
    local sizeX = 2048
    local sizeY = 16
    local sizeZ = 2048

    
    baseplate = Instance.new("Part")
    baseplate.Size = Vector3.new(sizeX, sizeY, sizeZ)
    baseplate.Position = Vector3.new(0, sizeY / -1.99, 0) 
    baseplate.Anchored = true
    baseplate.CanCollide = true
    baseplate.Transparency = 0.5 
    baseplate.Material = Enum.Material.SmoothPlastic
    baseplate.Color = Color3.fromRGB(106, 28, 154)

    
    baseplate.Parent = Workspace
end
end


local Toggle = Tab8:CreateToggle({
Name = "Extended Baseplate",
CurrentValue = false,
Flag = "Toggle1", 
Callback = function(Value)
   
   local soccerField = workspace:FindFirstChild("SoccerField")
   local baseplate

   if soccerField then
       
       baseplate = soccerField:FindFirstChild("Baseplate")
   else
       
       local gameFolder = workspace:FindFirstChild("Game")
       if gameFolder then
           
           baseplate = gameFolder:FindFirstChild("Baseplate")
       end
   end

   
   if baseplate then
       if Value then
           
           baseplate.Size = Vector3.new(2048, 16, 2048)
       else
           
           baseplate.Size = Vector3.new(402, 16, 387)
       end
   else
   end
end,
})


local Slider = Tab8:CreateSlider({
Name = "Baseplate Height",
Range = {-10, 5}, 
Increment = 0.1, 
Suffix = "Studs",
CurrentValue = -1.99, 
Flag = "BaseplateHeightSlider", 
Callback = function(Value)
    if baseplate then
        
        baseplate.Size = Vector3.new(baseplate.Size.X, Value, baseplate.Size.Z)
        baseplate.Position = Vector3.new(0, Value / 2, 0) 
    end
end,
})

local SliderDistance = Tab8:CreateSlider({
Name = "Baseplate Distance",
Range = {0, 2048}, 
Increment = 1, 
Suffix = "Studs",
CurrentValue = 2048, 
Flag = "BaseplateDistanceSlider", 
Callback = function(Value)
    if baseplate then
        
        local newSize = Value * 2 

        
        baseplate.Size = Vector3.new(newSize, baseplate.Size.Y, newSize)

        
        baseplate.Position = Vector3.new(0, baseplate.Position.Y, 0)

    end
end,
})


local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://9042041852"  
sound.Volume = 0.2  
sound.Looped = true  
sound.Parent = game:GetService("Workspace")  

sound:Play()  


local Slider = Tab8:CreateSlider({
   Name = "Music Volume",  
   Range = {0, 100},  
   Increment = 1,  
   Suffix = "%",  
   CurrentValue = 20,  
   Flag = "VolumeSlider",  
   Callback = function(Value)
       
       if sound then
           sound.Volume = Value / 100  
       end
   end,
})


local Label = Tab8:CreateLabel("Mic Up Baseplate", 4483362458, Color3.fromRGB(255, 255, 255), false) 

local tweenService = game:GetService("TweenService")

local Dropdown = Tab8:CreateDropdown({
Name = "Change Baseplate Material",
Options = {"Grass", "Snow", "Neon", "Halloween"},
CurrentOption = {"Grass"},
MultipleOptions = false,
Flag = "Dropdown1", 
Callback = function(Options)
    
    local soccerField = workspace:FindFirstChild("SoccerField")
    local baseplate

    if soccerField then
        
        baseplate = soccerField:FindFirstChild("Baseplate")
    else
        
        local gameFolder = workspace:FindFirstChild("Game")
        if gameFolder then
            
            baseplate = gameFolder:FindFirstChild("Baseplate")
        end
    end

    if baseplate then
        
        for _, child in pairs(baseplate:GetChildren()) do
            if child:IsA("Texture") and child.Texture == "rbxassetid://10442413242" then
                child:Destroy()
            end
        end

        
        if Options[1] == "Grass" then
            
            baseplate.Material = Enum.Material.Grass
            baseplate.Color = Color3.fromRGB(85, 170, 85)
        
            
            local grassTexture = Instance.new("Texture")
            grassTexture.Texture = "rbxassetid://10442413242"
            grassTexture.StudsPerTileU = 4
            grassTexture.StudsPerTileV = 4
            grassTexture.Parent = baseplate
        
        elseif Options[1] == "Snow" then
            
            baseplate.Material = Enum.Material.Snow
            baseplate.Color = Color3.fromRGB(240, 240, 240) 
        
        elseif Options[1] == "Neon" then
            
            baseplate.Material = Enum.Material.Neon
            baseplate.Color = Color3.fromRGB(0, 255, 255) 
        
        elseif Options[1] == "Halloween" then
            
            baseplate.Material = Enum.Material.SmoothPlastic
            baseplate.Color = Color3.fromRGB(255, 102, 0) 
        end

    else
    end
end,
})

local ColorPicker = Tab8:CreateColorPicker({
Name = "Baseplate Color",
Color = Color3.fromRGB(255, 255, 255), 
Flag = "ColorPicker1", 
Callback = function(Value)
    
    
     
    local soccerField = workspace:FindFirstChild("SoccerField")
    local baseplate

    if soccerField then
        
        baseplate = soccerField:FindFirstChild("Baseplate")
    else
        
        local gameFolder = workspace:FindFirstChild("Game")
        if gameFolder then
            
            baseplate = gameFolder:FindFirstChild("Baseplate")
        end
    end

    if baseplate then
        
        baseplate.Color = Value
    else
    end
end
})

local Slider = Tab5:CreateSlider({
Name = "FOV Slider",
Range = {0, 120}, 
Increment = 1, 
Suffix = "°", 
CurrentValue = 70, 
Flag = "Slider1", 
Callback = function(Value)
    
    local camera = game.Workspace.CurrentCamera
    camera.FieldOfView = Value 
end,
})


local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local runService = game:GetService("RunService")
local originalColors = {} 
local rainbowEnabled = false 
local rainbowCoroutine 


local function storeOriginalColors()
 for _, part in pairs(character:GetDescendants()) do
     if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
         originalColors[part] = part.Color
     end
 end
end


local function restoreOriginalColors()
 for part, color in pairs(originalColors) do
     if part and part:IsA("BasePart") then
         part.Color = color
     end
 end
end


local function getRainbowColor(hue)
 return Color3.fromHSV(hue, 1, 1)
end


local function applyRainbowEffect()
 local hue = 0
 while rainbowEnabled do
     
     hue = (hue + 0.01) % 1
     local rainbowColor = getRainbowColor(hue)

     
     for _, part in pairs(character:GetDescendants()) do
         if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
             part.Color = rainbowColor
         end
     end

     task.wait(0.05) 
 end
end

local GC = getconnections or get_signal_cons
local AntiAFKEnabled = false 

local Toggle = Tab3:CreateToggle({
    Name = "Anti-AFK Toggle",
    CurrentValue = false,
    Flag = "AntiAFKToggle", 
    Callback = function(Value)
        if Value then
            
            AntiAFKEnabled = true
            if GC then
                for _, v in pairs(GC(game:GetService("Players").LocalPlayer.Idled)) do
                    if v["Disable"] then
                        v["Disable"](v)
                    elseif v["Disconnect"] then
                        v["Disconnect"](v)
                    end
                end
            else
                local VirtualUser = cloneref(game:GetService("VirtualUser"))
                game:GetService("Players").LocalPlayer.Idled:Connect(function()
                    if AntiAFKEnabled then
                        VirtualUser:CaptureController()
                        VirtualUser:ClickButton2(Vector2.new())
                    end
                end)
            end

            Rayfield:Notify({
                Title = "Anti-AFK Enabled",
                Content = "Anti-AFK has been successfully activated.",
                Duration = 6.5,
                Image = 4483362458,
            })
        else
            
            AntiAFKEnabled = false
            Rayfield:Notify({
                Title = "Anti-AFK Disabled",
                Content = "Anti-AFK has been successfully deactivated.",
                Duration = 6.5,
                Image = 4483362458,
            })
        end
    end,
})




local Toggle = Tab3:CreateToggle({
 Name = "Rainbow Character",
 CurrentValue = false,
 Flag = "ToggleRainbow",
 Callback = function(Value)
     if Value then
         
         if not rainbowEnabled then
             rainbowEnabled = true
             storeOriginalColors() 
             rainbowCoroutine = coroutine.wrap(applyRainbowEffect)
             rainbowCoroutine()
         end
     else
         
         rainbowEnabled = false
         task.wait(0.1) 
         restoreOriginalColors()
     end
 end,
})

local Toggle = Tab5:CreateToggle({
 Name = "Bathrooms [ayo]",
 CurrentValue = false,
 Flag = "Toggle1", 
 Callback = function(Value)
     local player = game.Players.LocalPlayer
     local camera = game.Workspace.CurrentCamera
  
     
     local originalCameraType = camera.CameraType
     local originalCameraCFrame = camera.CFrame
  
     
     local targetPosition = CFrame.new(-71.2184372, 14, 97.3411865)  
     local rotation = CFrame.Angles(0, math.rad(45), 0)  
  
     
     local targetCFrame = targetPosition * rotation

     if Value then
         
         camera.CameraType = Enum.CameraType.Scriptable  
         camera.CFrame = targetCFrame  

     else
         
         camera.CameraType = Enum.CameraType.Custom  
         camera.CFrame = originalCameraCFrame  

     end
 end,
})

local Toggle = Tab5:CreateToggle({
 Name = "Donut Shop",
 CurrentValue = false,
 Flag = "Toggle1", 
 Callback = function(Value)
     local player = game.Players.LocalPlayer
     local camera = game.Workspace.CurrentCamera
  
     
     local originalCameraType = camera.CameraType
     local originalCameraCFrame = camera.CFrame
  
     
     local targetPosition = CFrame.new(-102.771515, 14, -60.5795631)  
     local rotation = CFrame.Angles(0, math.rad(10), 0)  
  
     
     local targetCFrame = targetPosition * rotation

     if Value then
         
         camera.CameraType = Enum.CameraType.Scriptable  
         camera.CFrame = targetCFrame  

     else
         
         camera.CameraType = Enum.CameraType.Custom  
         camera.CFrame = originalCameraCFrame  

     end
 end,
})

local Toggle = Tab5:CreateToggle({
 Name = "Priv Room [Top]",
 CurrentValue = false,
 Flag = "Toggle1", 
 Callback = function(Value)
     local player = game.Players.LocalPlayer
     local camera = game.Workspace.CurrentCamera
  
     
     local originalCameraType = camera.CameraType
     local originalCameraCFrame = camera.CFrame
  
     
     local targetPosition = CFrame.new(203, 37, 75)  
     local rotation = CFrame.Angles(0, math.rad(-45), 0)  
  
     
     local targetCFrame = targetPosition * rotation

     if Value then
         
         camera.CameraType = Enum.CameraType.Scriptable  
         camera.CFrame = targetCFrame  

     else
         
         camera.CameraType = Enum.CameraType.Custom  
         camera.CFrame = originalCameraCFrame  

     end
 end,
})

local Toggle = Tab5:CreateToggle({
 Name = "Priv Room [Below]",
 CurrentValue = false,
 Flag = "Toggle1", 
 Callback = function(Value)
     local player = game.Players.LocalPlayer
     local camera = game.Workspace.CurrentCamera
  
     
     local originalCameraType = camera.CameraType
     local originalCameraCFrame = camera.CFrame
  
     
     local targetPosition = CFrame.new(204, 18, 73)  
     local rotation = CFrame.Angles(0, math.rad(-45), 0)  
  
     
     local targetCFrame = targetPosition * rotation

     if Value then
         
         camera.CameraType = Enum.CameraType.Scriptable  
         camera.CFrame = targetCFrame  

     else
         
         camera.CameraType = Enum.CameraType.Custom  
         camera.CFrame = originalCameraCFrame  

     end
 end,
})

local Toggle = Tab5:CreateToggle({
 Name = "Tower [Below]",
 CurrentValue = false,
 Flag = "Toggle1", 
 Callback = function(Value)
     local player = game.Players.LocalPlayer
     local camera = game.Workspace.CurrentCamera
  
     
     local originalCameraType = camera.CameraType
     local originalCameraCFrame = camera.CFrame
  
     
     local targetPosition = CFrame.new(38, 13, 241)  
     local rotation = CFrame.Angles(0, math.rad(-45), 0)  
  
     
     local targetCFrame = targetPosition * rotation

     if Value then
         
         camera.CameraType = Enum.CameraType.Scriptable  
         camera.CFrame = targetCFrame  

     else
         
         camera.CameraType = Enum.CameraType.Custom  
         camera.CFrame = originalCameraCFrame  

     end
 end,
})

local Toggle = Tab5:CreateToggle({
 Name = "Tower [Top]",
 CurrentValue = false,
 Flag = "Toggle1", 
 Callback = function(Value)
     local player = game.Players.LocalPlayer
     local camera = game.Workspace.CurrentCamera
  
     
     local originalCameraType = camera.CameraType
     local originalCameraCFrame = camera.CFrame
  
     
     local targetPosition = CFrame.new(20, 291, 259)  
     local rotation = CFrame.Angles(0, math.rad(-45), 0)  
  
     
     local targetCFrame = targetPosition * rotation

     if Value then
         
         camera.CameraType = Enum.CameraType.Scriptable  
         camera.CFrame = targetCFrame  

     else
         
         camera.CameraType = Enum.CameraType.Custom  
         camera.CFrame = originalCameraCFrame  

     end
 end,
})

local Toggle = Tab5:CreateToggle({
 Name = "Tower [Very Top]",
 CurrentValue = false,
 Flag = "Toggle1", 
 Callback = function(Value)
     local player = game.Players.LocalPlayer
     local camera = game.Workspace.CurrentCamera
  
     
     local originalCameraType = camera.CameraType
     local originalCameraCFrame = camera.CFrame
  
     
     local targetPosition = CFrame.new(33, 317, 244)  
     local rotation = CFrame.Angles(0, math.rad(-45), 0)  
  
     
     local targetCFrame = targetPosition * rotation

     if Value then
         
         camera.CameraType = Enum.CameraType.Scriptable  
         camera.CFrame = targetCFrame  

     else
         
         camera.CameraType = Enum.CameraType.Custom  
         camera.CFrame = originalCameraCFrame  

     end
 end,
})

local Toggle = Tab5:CreateToggle({
 Name = "Canopy [Bathrooms]",
 CurrentValue = false,
 Flag = "Toggle1", 
 Callback = function(Value)
     local player = game.Players.LocalPlayer
     local camera = game.Workspace.CurrentCamera
  
     
     local originalCameraType = camera.CameraType
     local originalCameraCFrame = camera.CFrame
  
     
     local targetPosition = CFrame.new(-81, 18, 138)  
     local rotation = CFrame.Angles(0, math.rad(45), 0)  
  
     
     local targetCFrame = targetPosition * rotation

     if Value then
         
         camera.CameraType = Enum.CameraType.Scriptable  
         camera.CFrame = targetCFrame  

     else
         
         camera.CameraType = Enum.CameraType.Custom  
         camera.CFrame = originalCameraCFrame  

     end
 end,
})

local Toggle = Tab5:CreateToggle({
 Name = "Canopy [Middle]",
 CurrentValue = false,
 Flag = "Toggle1", 
 Callback = function(Value)
     local player = game.Players.LocalPlayer
     local camera = game.Workspace.CurrentCamera
  
     
     local originalCameraType = camera.CameraType
     local originalCameraCFrame = camera.CFrame
  
     
     local targetPosition = CFrame.new(57, 16, 37)  
     local rotation = CFrame.Angles(0, math.rad(-45), 0)  
  
     
     local targetCFrame = targetPosition * rotation

     if Value then
         
         camera.CameraType = Enum.CameraType.Scriptable  
         camera.CFrame = targetCFrame  

     else
         
         camera.CameraType = Enum.CameraType.Custom  
         camera.CFrame = originalCameraCFrame  

     end
 end,
})

local Toggle = Tab5:CreateToggle({
 Name = "Priv Room [Inside]",
 CurrentValue = false,
 Flag = "Toggle1", 
 Callback = function(Value)
     local player = game.Players.LocalPlayer
     local camera = game.Workspace.CurrentCamera
  
     
     local originalCameraType = camera.CameraType
     local originalCameraCFrame = camera.CFrame
  
     
     local targetPosition = CFrame.new(4239, 19, 74)  
     local rotation = CFrame.Angles(0, math.rad(60), 0)  
  
     
     local targetCFrame = targetPosition * rotation

     if Value then
         
         camera.CameraType = Enum.CameraType.Scriptable  
         camera.CFrame = targetCFrame  

     else
         
         camera.CameraType = Enum.CameraType.Custom  
         camera.CFrame = originalCameraCFrame  

     end
 end,
})

local Label = Tab1:CreateLabel("Freeze - Invis", 14902217812, Color3.fromRGB(220, 220, 220), true)

local FrozenChar = Tab1:CreateToggle({
Name = "Freeze Character",
CurrentValue = false,
Flag = "AntiMovement",
Callback = function(hasFrozenChar)
  if hasFrozenChar then
      local Character = getgenv().Character
      local Workspace_Service = game:GetService("Workspace") or workspace or cloneref(game:GetService("Workspace"))
      local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart", true) or Workspace_Service:WaitForChild(LocalPlayer.Name):WaitForChild("HumanoidRootPart", 999)
      getgenv().FreezingChar = true
      if Character and HumanoidRootPart or Character:FindFirstChild("HuamnoidRootPart") then
          if getgenv().FreezingChar == true then
              HumanoidRootPart.Anchored = true
          end
      else
          getgenv().FreezingChar = false
      end
  else
      local Character = getgenv().Character
      local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart") or Character:FindFirstChild("HumanoidRootPart", true)
      if Character and HumanoidRootPart or Character:FindFirstChild("HumanoidRootPart") then
          getgenv().FreezingChar = false
          wait(0)
          HumanoidRootPart.Anchored = false
      else
          getgenv().FreezingChar = false
      end
  end
end,})

local Label = Tab8:CreateLabel("Esp/Misc", 4483362458, Color3.fromRGB(255, 255, 255), false)

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Highlights = {}  
local ESPEnabled = false
local HighlightColor = Color3.fromRGB(255, 0, 0)  


local function CreateHighlight(Target)
    
    if Target.Character and Target.Character:FindFirstChild("Humanoid") then
        local Character = Target.Character
        local Highlight = Instance.new("Highlight")
        Highlight.Name = Target.Name
        Highlight.Parent = Character
        Highlight.Adornee = Character  
        Highlight.FillColor = HighlightColor  
        Highlight.FillTransparency = 0.5  
        Highlight.OutlineColor = Color3.fromRGB(255, 255, 255)  
        Highlight.OutlineTransparency = 0.5  

        
        Highlights[Target.Name] = Highlight
    end
end


local function RemoveHighlight(Target)
    if Highlights[Target.Name] then
        Highlights[Target.Name]:Destroy()
        Highlights[Target.Name] = nil
    end
end


local Toggle = Tab8:CreateToggle({
    Name = "Toggle Esp",
    CurrentValue = false,
    Flag = "TogglePlayerHighlighting",  
    Callback = function(Value)
        if Value then
            
            ESPEnabled = true
            for _, Target in pairs(Players:GetPlayers()) do
                if Target ~= Player then
                    
                    CreateHighlight(Target)
                end
            end
        else
            
            ESPEnabled = false
            for _, Target in pairs(Players:GetPlayers()) do
                if Target ~= Player then
                    
                    RemoveHighlight(Target)
                end
            end
        end
    end,
})


local ColorPicker = Tab8:CreateColorPicker({
    Name = "Highlight Color",
    Color = HighlightColor,  
    Flag = "ColorPicker1",  
    Callback = function(Value)
        
        HighlightColor = Value
        
        if ESPEnabled then
            for _, Highlight in pairs(Highlights) do
                Highlight.FillColor = HighlightColor  
            end
        end
    end
})


Players.PlayerAdded:Connect(function(Target)
    if ESPEnabled then
        CreateHighlight(Target)
    end
end)


Players.PlayerRemoving:Connect(function(Target)
    RemoveHighlight(Target)
end)


local function CleanupHighlights()
    for _, Target in pairs(Players:GetPlayers()) do
        RemoveHighlight(Target)
    end
end


game:GetService("RunService").Heartbeat:Connect(function()
    if not ESPEnabled then
        CleanupHighlights()
    end
end)


local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local MarkerUI
local MarkersActive = false


local function CreateMarker(Target)
    local Marker = Instance.new("BillboardGui")
    Marker.Name = Target.Name
    Marker.Size = UDim2.new(0, 200, 0, 100)  
    Marker.StudsOffset = Vector3.new(0, 3, 0)
    Marker.Adornee = Target.Character and Target.Character:FindFirstChild("Head")
    Marker.AlwaysOnTop = true

    
    local Background = Instance.new("Frame")
    Background.Size = UDim2.new(1, 0, 1, 0)
    Background.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Background.BackgroundTransparency = 0.5
    Background.Parent = Marker

    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = Background

    
    local DisplayNameLabel = Instance.new("TextLabel")
    DisplayNameLabel.Size = UDim2.new(1, 0, 0.5, 0)
    DisplayNameLabel.Position = UDim2.new(0, 0, 0, 0)
    DisplayNameLabel.BackgroundTransparency = 1
    DisplayNameLabel.Text = Target.DisplayName
    DisplayNameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    DisplayNameLabel.TextScaled = true
    DisplayNameLabel.Font = Enum.Font.GothamBold
    DisplayNameLabel.Parent = Background

    
    local UsernameLabel = Instance.new("TextLabel")
    UsernameLabel.Size = UDim2.new(1, 0, 0.5, 0)
    UsernameLabel.Position = UDim2.new(0, 0, 0.5, 0)
    UsernameLabel.BackgroundTransparency = 1
    UsernameLabel.Text = "@" .. Target.Name
    UsernameLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    UsernameLabel.TextScaled = true
    UsernameLabel.Font = Enum.Font.Gotham
    UsernameLabel.Parent = Background

    
    local Button = Instance.new("TextButton")
    Button.Size = UDim2.new(1, 0, 1, 0)
    Button.BackgroundTransparency = 1
    Button.Text = ""
    Button.Parent = Marker

    return Marker, Button
end


local function TeleportToPlayer(Target)
    if Target.Character and Target.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = Target.Character.HumanoidRootPart
        Player.Character:SetPrimaryPartCFrame(hrp.CFrame + Vector3.new(0, 5, 0))
    end
end


local function SetupMarkers()
    if MarkerUI then
        MarkerUI:Destroy()
    end

    MarkerUI = Instance.new("ScreenGui")
    MarkerUI.Name = "Markers"
    MarkerUI.ResetOnSpawn = false
    MarkerUI.Parent = Player.PlayerGui
    MarkersActive = true

    wait(0.1)
    while MarkersActive do
        for _, Target in pairs(Players:GetPlayers()) do
            if Target == Player then
                continue
            end

            if not Target.Character then
                if MarkerUI:FindFirstChild(Target.Name) then
                    MarkerUI:FindFirstChild(Target.Name):Destroy()
                end
                continue
            end

            if MarkerUI:FindFirstChild(Target.Name) then
                continue
            end

            local Marker, Button = CreateMarker(Target)
            if Marker then
                Marker.Parent = MarkerUI
                Button.MouseButton1Click:Connect(function()
                    TeleportToPlayer(Target)
                end)
            end
        end

        
        for _, Marker in pairs(MarkerUI:GetChildren()) do
            if Marker:IsA("BillboardGui") and not Players:FindFirstChild(Marker.Name) then
                Marker:Destroy()
            end
        end

        wait(0.65)
    end
end


local Button = Tab8:CreateButton({
    Name = "Toggle Markers",
    Callback = function()
        if MarkersActive then
            
            MarkersActive = false
            if MarkerUI then
                MarkerUI:Destroy()
                MarkerUI = nil
            end
        else
            
            SetupMarkers()
        end
    end,
})

local Label = Tab8:CreateLabel("Job Id / Player Joiner", 4483362458, Color3.fromRGB(255, 255, 255), false)

local Players = game:GetService("Players")
local Player = Players.LocalPlayer


local function JoinJob(JobID)
    
    
    
    

    
    
    local jobAssigned = false
    for _, v in pairs(game:GetService("Workspace"):GetChildren()) do
        if v.Name == "Job" and v:FindFirstChild(JobID) then
            
            Player:SetAttribute("JobID", JobID)  
            jobAssigned = true
            break
        end
    end

    
    if jobAssigned then
        print("Successfully joined Job ID: " .. JobID)
    else
        print("Invalid Job ID: " .. JobID)
    end
end


local Input = Tab8:CreateInput({
    Name = "Enter Job ID",  
    CurrentValue = "",  
    PlaceholderText = "Input Job ID",  
    RemoveTextAfterFocusLost = false,  
    Flag = "JobIDInput",  
    Callback = function(JobID)
        
        if JobID and JobID ~= "" then
            JoinJob(JobID)  
        else
            print("Please enter a valid Job ID")
        end
    end,
})

local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

local OwnerName = "01xMYS" 
local ScriptURL = 'https://raw.githubusercontent.com/MYSISBETTER/V6.3/refs/heads/main/MainV1' 

local function executeScript()
    Rayfield:Notify({
        Title = "Executing Script",
        Content = "Automatically executing the requested script...",
        Duration = 6.5,
        Image = 4483362458,
    })
    loadstring(game:HttpGet(ScriptURL))()
end

local function teleportToOwnerOrServer()
    local LocalPlayer = Players.LocalPlayer
    local OwnerPlayer = Players:FindFirstChild(OwnerName)

    if OwnerPlayer then
        
        if OwnerPlayer.Character and OwnerPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character:PivotTo(OwnerPlayer.Character.HumanoidRootPart.CFrame)
            Rayfield:Notify({
                Title = "Teleported",
                Content = "You have been teleported to " .. OwnerName .. "!",
                Duration = 6.5,
                Image = 4483362458,
            })
        else
            Rayfield:Notify({
                Title = "Teleport Failed",
                Content = OwnerName .. " is in the server but their character is not fully loaded.",
                Duration = 6.5,
                Image = 4483362458,
            })
        end
    else
        
        print("Owner not found in the current server. Searching for their server...")
        local success, result = pcall(function()
            return TeleportService:GetPlayerPlaceInstanceAsync(OwnerName)
        end)

        if success and result then
            Rayfield:Notify({
                Title = "Teleporting",
                Content = "Teleporting to " .. OwnerName .. "'s server...",
                Duration = 6.5,
                Image = 4483362458,
            })
            TeleportService:TeleportToPlaceInstance(result.PlaceId, result.InstanceId, LocalPlayer)
        else
            Rayfield:Notify({
                Title = "Teleport Failed",
                Content = "Could not find " .. OwnerName .. "'s server.",
                Duration = 6.5,
                Image = 4483362458,
            })
            warn("Error while trying to teleport: ", result)
        end
    end
end


local function checkServerForOwner()
    local success, result = pcall(function()
        return TeleportService:GetPlayerPlaceInstanceAsync(OwnerName)
    end)

    if success and result then
        local currentPlaceId = game.PlaceId
        local currentInstanceId = game.JobId

        
        if currentPlaceId == result.PlaceId and currentInstanceId == result.InstanceId then
            executeScript()
        end
    else
        warn("Failed to check server for owner: ", result)
    end
end


checkServerForOwner()


local TPOwnerBruh = Tab1:CreateButton({
    Name = "Teleport To: 01xMYS {owner}",
    Callback = function()
        teleportToOwnerOrServer()
    end,
})

local Button = Tab7:CreateButton({
    Name = "Setup Camera Tool",
    Callback = function()
        
        local tool = Instance.new("Tool")
        tool.Name = "Freecam Drone"
        tool.RequiresHandle = false 
        tool.Parent = game.Players.LocalPlayer.Backpack

        local dronePart = nil
        local freecamActive = false

        
        local function enableFreecam()
            if freecamActive then return end 
            freecamActive = true

            
            dronePart = Instance.new("Part")
            dronePart.Name = "Drone"
            dronePart.Size = Vector3.new(2, 1, 2)
            dronePart.Anchored = true
            dronePart.CanCollide = false
            dronePart.BrickColor = BrickColor.new("Bright yellow")
            dronePart.Parent = workspace

            
            local camera = workspace.CurrentCamera
            local player = game.Players.LocalPlayer

            
            local originalCameraType = camera.CameraType
            local originalCameraSubject = camera.CameraSubject

            
            camera.CameraType = Enum.CameraType.Scriptable

            
            local runService = game:GetService("RunService")
            local connection
            connection = runService.RenderStepped:Connect(function()
                
                local cameraPos = camera.CFrame.Position

                
                dronePart.CFrame = CFrame.new(cameraPos) * CFrame.Angles(0, math.rad(90), 0)
            end)

            
            local function exitFreecam()
                freecamActive = false
                camera.CameraType = originalCameraType
                camera.CameraSubject = originalCameraSubject
                connection:Disconnect() 
                if dronePart then
                    dronePart:Destroy()
                    dronePart = nil
                end
            end

            
            tool.Unequipped:Connect(exitFreecam)
        end

        
        tool.Activated:Connect(function()
            if freecamActive then
                
                if dronePart then
                    dronePart:Destroy()
                    dronePart = nil
                end
                freecamActive = false
                workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
            else
                
                enableFreecam()
            end
        end)
    end,
})


local Button = Tab2:CreateButton({
    Name = "MYS System Broken",
    Callback = function()
	loadstring(game:HttpGet('https://raw.githubusercontent.com/MYSISBETTER/MYS-SB/refs/heads/main/SB%20MYS'))()
end,
})


local Button = Tab4:CreateButton({
    Name = "Force Join",
    Callback = function()
        -- Function to handle Voice Chat state changes
        local function onVoiceChatStateChanged(oldState, newState)
            if newState == Enum.VoiceChatState.Ended then
                if getgenv().VoiceChatService then
                    getgenv().VoiceChatService:joinVoice()
                    print("Rejoining voice chat...")
                else
                    warn("VoiceChatService is not initialized.")
                end
            end
        end

        -- Ensure VoiceChatInternal and StateChanged are available
        if getgenv().VoiceChatInternal and getgenv().VoiceChatInternal.StateChanged then
            getgenv().VoiceChatInternal.StateChanged:Connect(onVoiceChatStateChanged)
            print("Connected to VoiceChatInternal StateChanged event.")
        else
            warn("VoiceChatInternal or StateChanged is not available. Ensure it's initialized.")
        end

        -- Force join the voice chat when the button is clicked
        if getgenv().VoiceChatService then
            print("Force joining voice chat...")
            getgenv().VoiceChatService:joinVoice()
            print("Voice chat joined successfully.")
        else
            warn("VoiceChatService is not initialized.")
        end
    end,
})





getgenv().voiceChat_Check = true



local function onVoiceChatStateChanged(oldState, newState)
    if not getgenv().voiceChatToggleState then

    end

    if newState == Enum.VoiceChatState.Ended then
        if getgenv().VoiceChatService then
            getgenv().VoiceChatService:joinVoice()

        end
    end
end


local Toggle = Tab4:CreateToggle({
    Name = "Auto-Unsuspend",
    CurrentValue = false,
    Flag = "VoiceChatToggle", 
    Callback = function(Value)
        getgenv().voiceChatToggleState = Value 
        if Value then
            print("Voice Chat monitoring activated.")
        else
            print("Voice Chat monitoring deactivated.")
        end
    end,
})


if getgenv().VoiceChatInternal and getgenv().VoiceChatInternal.StateChanged then
    getgenv().VoiceChatInternal.StateChanged:Connect(onVoiceChatStateChanged)

end


local Button = Tab1:CreateButton({
   Name = "Give Slop [REANIMATE]",
   Callback = function()
local TextChatService = game:GetService("TextChatService")


local function sendMessage(content)
    
    local chatChannel = TextChatService:FindFirstChild("TextChannels") and TextChatService.TextChannels:FindFirstChild("RBXGeneral")
    if chatChannel then
        chatChannel:SendAsync(content)  
    else
        warn("Chat channel not found!")
    end
end


sendMessage([[.																						
																								Im Freaky As Hell
																										↓]])

   end,
})


local Button = Tab6:CreateButton({
   Name = "Advertise [CUSTOM]",
   Callback = function()
local TextChatService = game:GetService("TextChatService")


local function sendMessage(content)
    
    local chatChannel = TextChatService:FindFirstChild("TextChannels") and TextChatService.TextChannels:FindFirstChild("RBXGeneral")
    if chatChannel then
        chatChannel:SendAsync(content)  
    else
        warn("Chat channel not found!")
    end
end


sendMessage([[.
		⬛⬛⬛⬛⬛⬛⬛MYS.CLIENT ON TOP⬛⬛⬛⬛⬛⬛⬛]])


   end,
})
